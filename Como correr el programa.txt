# SETUP_AND_TEST.txt
# ------------------
# Instrucciones para compilar, ejecutar y probar el servidor Go

# 1) Instalar dependencias y limpiar el módulo
go mod tidy

# 2) Ejecutar el servidor (Correr el programa)
#    Por defecto arranca en el puerto 8080
go run ./cmd

# 3) Probar endpoints con curl (o tu navegador):
#    Ayuda / listado de comandos
curl "http://localhost:8080/help"

#    Fibonacci (10º número)
curl "http://localhost:8080/fibonacci?num=10"

#    Crear archivo 'test.txt' con 'Hola' repetido 3 veces
curl "http://localhost:8080/createfile?name=test.txt&content=Hola&repeat=3"

#    Leer el archivo (solo para comprobar contenido; no es endpoint)
#    cat test.txt

#    Eliminar archivo
curl "http://localhost:8080/deletefile?name=test.txt"

#    Invertir texto
curl "http://localhost:8080/reverse?text=HolaMundo"

#    Convertir a mayúsculas
curl "http://localhost:8080/toupper?text=hola-mundo"

#    Números aleatorios (5 números entre 1 y 100)
curl "http://localhost:8080/random?count=5&min=1&max=100"

#    Timestamp (hora actual)
curl "http://localhost:8080/timestamp"

#    SHA-256 de un texto
curl "http://localhost:8080/hash?text=datossecretos"

#    Simular tarea (4s, nombre opcional)
curl "http://localhost:8080/simulate?seconds=4&task=demoTask"

#    Sleep (pausa de 2s)
curl "http://localhost:8080/sleep?seconds=2"

#    Load test (10 tareas concurrentes durmiendo 1s cada una)
curl "http://localhost:8080/loadtest?tasks=10&sleep=1"

#    Métricas del servidor
curl "http://localhost:8080/status"

# 4) Para detener el servidor: Ctrl+C en la terminal donde corre ./httpserver
