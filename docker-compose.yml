version: "3.8"

services:
  # ——————————————————————————————
  # Worker 1
  # Builds the image from ./worker/Dockerfile
  # Does not expose port to the host (used only internally)
  # ——————————————————————————————
  worker1:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker1
    # EXPOSE 8080 is defined in the worker's Dockerfile,
    # so it is available on Docker Compose's internal network.
    # No need to map ports to the host machine since only
    # the Dispatcher connects internally.

  # ——————————————————————————————
  # Worker 2 (identical to Worker 1, but with a different service name)
  # ——————————————————————————————
  worker2:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker2

  # ——————————————————————————————
  # Worker 3 (another one to have 3 replicas)
  # ——————————————————————————————
  worker3:
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: worker3

  # ——————————————————————————————
  # Dispatcher
  # Builds the image from ./dispatcher/Dockerfile
  # Publishes its port 9090 to the host
  # The WORKERS environment variable lists the three worker services: "worker1:8080,worker2:8080,worker3:8080"
  # ——————————————————————————————
  dispatcher:
    build:
      context: ./dispatcher
      dockerfile: Dockerfile
    container_name: dispatcher
    environment:
      - WORKERS=worker1:8080,worker2:8080,worker3:8080
    ports:
      - "9090:9090"
    depends_on:
      - worker1
      - worker2
      - worker3
# -------------------------------------------------
# By default, Docker Compose creates an internal network
# named "httpservergo_default" (if your project is named
# "httpservergo" or similar). On that network, the services
# worker1, worker2, worker3, and dispatcher are reachable
# by their service names.
# -------------------------------------------------
